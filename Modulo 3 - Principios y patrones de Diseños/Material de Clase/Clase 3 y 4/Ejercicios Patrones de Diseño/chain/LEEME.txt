Chain of responsibility

Nuestra aplicación permite la gestión de documentos representados por la clase Documento

En particular, tenemos distintos lectores para los distintos formatos de documento representados por
la interface LectorDocumentos y sus distintas implementaciones: LectorPdf, LectorOdt ... (se espera que
se vaya incrementando el numero de lectores disponibles).

Una funcionalidad básica es ProcesadorDocumentos, que permite, dada una lista de documentos, devolver
una cadena con el contenido de todos ellos procesado por su lector correspondiente (en función del tipo
de documento).

El sistema esta bastante estructurado pero aun hay una parte que no nos gusta: ProcesadorDocumentos 
se tiene que modificar para cada tipo de lector que aparece. 

Modificar el código para cada lector sea el que determina si puede o no procesar un documento y hacer que
en la construcción de ProcesadorDocumentos se le pasen todos los lectores disponibles. El objetivo es que,
en caso de que aparezca un nuevo formato, con su lector correspondiente, no se tenga que cambiar nada de 
ProcesadorDocumentos.

En LectorDocumentos agregar un método boolean acepta, para indicar si acepta el tipo de documento o no.
Esto nos lleva a modificar todos los lectores para aceptar este nuevo método y nos regrese el tipo de documento.
De la misma manera, el ProcesadorDocumentos deberá modificar el constructor para instanciar 
una lista de documentos (varargs), y modificar el método concatena para aceptar cualquier tipo de documento.
Aqui es donde una vez hechos los cambios, ya nunca vamos a volver a cambiar esta clase.
Finalmente, adecuar el test para aceptar los cambios correctamente.

Hecho esto, adaptar el TestLectorDocumentos a nuestros cambios y comprobar que el test sigue funcionando.
